{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { PRODUCTS, CART } from \"../data/Dummy-Data\";\nimport styles from \"../assets/Styles\";\nimport { MaterialCommunityIcons as Icon } from \"@expo/vector-icons\";\nimport { getProduct } from \"../data/Dummy-Data\";\nimport { CartContext } from \"../CartContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProductsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var product_id = route.params.product_id;\n  var current_product = PRODUCTS.find(function (item) {\n    return item.id === product_id;\n  });\n  var totalPtrice = current_product.price + current_product.shipping;\n\n  var _useContext = useContext(CartContext),\n      addItemToCart = _useContext.addItemToCart;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      product = _useState2[0],\n      setProduct = _useState2[1];\n\n  useEffect(function () {\n    setProduct(getProduct(product_id));\n  });\n\n  function onAddToCart() {\n    addItemToCart(product.id);\n  }\n\n  return _jsx(View, {\n    style: [styles.productDetailsContainer, {\n      width: \"100%\"\n    }],\n    children: _jsxs(ScrollView, {\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          source: {\n            uri: current_product.productImage\n          },\n          style: styles.productImg\n        }), _jsx(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\",\n            padding: 10\n          },\n          children: current_product.product_title\n        })]\n      }), _jsx(Text, {\n        style: [styles.productDetailsText, {\n          color: \"white\",\n          marginTop: 5\n        }],\n        children: \"Product's Description:\"\n      }), _jsx(View, {\n        style: [styles.viewDivProductDetails, styles.centerView],\n        children: _jsx(Text, {\n          style: styles.productDetailsText,\n          children: current_product.description_paragraph\n        })\n      }), _jsx(Text, {\n        style: [styles.productDetailsText, {\n          color: \"white\",\n          textAlign: \"left\",\n          marginTop: 5\n        }],\n        children: \"Product's Size:\"\n      }), _jsx(View, {\n        style: [styles.viewDivProductDetails, {\n          width: 160\n        }],\n        children: _jsx(Text, {\n          style: styles.productDetailsText,\n          children: \"Size: \" + current_product.size\n        })\n      }), _jsx(Text, {\n        style: [styles.productDetailsText, {\n          color: \"white\",\n          textAlign: \"left\",\n          marginTop: 5\n        }],\n        children: \"Product's Shipping Price:\"\n      }), _jsx(View, {\n        style: [styles.viewDivProductDetails, {\n          width: 250\n        }],\n        children: _jsx(Text, {\n          style: styles.productDetailsText,\n          children: \"Shipping Price: \" + current_product.shipping + \"$\"\n        })\n      }), _jsx(Text, {\n        style: [styles.productDetailsText, {\n          color: \"white\",\n          textAlign: \"left\",\n          marginTop: 5\n        }],\n        children: \"Product's Total Cost:\"\n      }), _jsx(View, {\n        style: [styles.viewDivProductDetails, {\n          width: 225\n        }],\n        children: _jsx(Text, {\n          style: styles.productDetailsText,\n          children: \"Total Price: \" + totalPtrice + \"$\"\n        })\n      }), _jsx(View, {\n        style: styles.centerView,\n        children: _jsxs(TouchableOpacity, {\n          onPress: onAddToCart,\n          children: [_jsx(Text, {\n            style: [styles.centerView, {\n              color: \"white\",\n              fontWeight: \"bold\",\n              fontSize: 25\n            }],\n            children: \"Cart\"\n          }), _jsx(Icon, {\n            name: \"cart\",\n            size: 55,\n            color: \"white\"\n          })]\n        })\n      }), _jsx(View, {\n        style: [styles.centerView, {\n          margin: 17\n        }],\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            console.log(\"Navigate\");\n            navigation.navigate(\"Your Cart\");\n          },\n          children: _jsx(Text, {\n            style: [styles.centerView, {\n              color: \"white\",\n              fontWeight: \"bold\",\n              margin: 15\n            }],\n            children: \"Go To The Cart\"\n          })\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/pedal-it-store/screens/ProductsScreen.js"],"names":["React","useEffect","useState","useContext","PRODUCTS","CART","styles","MaterialCommunityIcons","Icon","getProduct","CartContext","ProductsScreen","route","navigation","product_id","params","current_product","find","item","id","totalPtrice","price","shipping","addItemToCart","product","setProduct","onAddToCart","productDetailsContainer","width","container","uri","productImage","productImg","fontSize","fontWeight","padding","product_title","productDetailsText","color","marginTop","viewDivProductDetails","centerView","description_paragraph","textAlign","size","margin","console","log","navigate"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { PRODUCTS, CART } from \"../data/Dummy-Data\";\r\nimport styles from \"../assets/Styles\";\r\nimport { MaterialCommunityIcons as Icon } from \"react-native-vector-icons\";\r\n\r\n//\r\nimport { getProduct } from \"../data/Dummy-Data\";\r\nimport { CartContext } from '../CartContext';\r\n//\r\n\r\nexport default function ProductsScreen({ route, navigation }) {\r\n  const product_id = route.params.product_id;\r\n  const current_product = PRODUCTS.find((item) => item.id === product_id);\r\n  let totalPtrice = current_product.price + current_product.shipping;\r\n\r\n  //\r\n  const { addItemToCart } = useContext(CartContext);\r\n  const [product, setProduct] = useState({});\r\n\r\n  useEffect(() => {\r\n    setProduct(getProduct(product_id));\r\n  });\r\n\r\n  function onAddToCart() {\r\n    addItemToCart(product.id);\r\n  }\r\n\r\n  //\r\n\r\n  return (\r\n    <View style={[styles.productDetailsContainer, { width: \"100%\" }]}>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Image\r\n            source={{ uri: current_product.productImage }}\r\n            style={styles.productImg}\r\n          ></Image>\r\n          <Text style={{ fontSize: 20, fontWeight: \"bold\", padding: 10 }}>\r\n            {current_product.product_title}\r\n          </Text>\r\n        </View>\r\n        <Text\r\n          style={[styles.productDetailsText, { color: \"white\", marginTop: 5 }]}\r\n        >\r\n          Product's Description:\r\n        </Text>\r\n        <View style={[styles.viewDivProductDetails, styles.centerView]}>\r\n          <Text style={styles.productDetailsText}>\r\n            {current_product.description_paragraph}\r\n          </Text>\r\n        </View>\r\n        <Text\r\n          style={[\r\n            styles.productDetailsText,\r\n            { color: \"white\", textAlign: \"left\", marginTop: 5 },\r\n          ]}\r\n        >\r\n          Product's Size:\r\n        </Text>\r\n        <View style={[styles.viewDivProductDetails, { width: 160 }]}>\r\n          <Text style={styles.productDetailsText}>\r\n            {\"Size: \" + current_product.size}\r\n          </Text>\r\n        </View>\r\n        <Text\r\n          style={[\r\n            styles.productDetailsText,\r\n            { color: \"white\", textAlign: \"left\", marginTop: 5 },\r\n          ]}\r\n        >\r\n          Product's Shipping Price:\r\n        </Text>\r\n        <View style={[styles.viewDivProductDetails, { width: 250 }]}>\r\n          <Text style={styles.productDetailsText}>\r\n            {\"Shipping Price: \" + current_product.shipping + \"$\"}\r\n          </Text>\r\n        </View>\r\n        <Text\r\n          style={[\r\n            styles.productDetailsText,\r\n            { color: \"white\", textAlign: \"left\", marginTop: 5 },\r\n          ]}\r\n        >\r\n          Product's Total Cost:\r\n        </Text>\r\n        <View style={[styles.viewDivProductDetails, { width: 225 }]}>\r\n          <Text style={styles.productDetailsText}>\r\n            {\"Total Price: \" + totalPtrice + \"$\"}\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.centerView}>\r\n          <TouchableOpacity\r\n            onPress={ onAddToCart\r\n              // console.log(\"On press = Cart Screen\");\r\n              // CART.push(current_product);\r\n              \r\n            }\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.centerView,\r\n                { color: \"white\", fontWeight: \"bold\", fontSize: 25 },\r\n              ]}\r\n            >\r\n              Cart\r\n            </Text>\r\n            <Icon name=\"cart\" size={55} color=\"white\"></Icon>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={[styles.centerView, { margin: 17 }]}>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              console.log(\"Navigate\");\r\n              navigation.navigate(\"Your Cart\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.centerView,\r\n                { color: \"white\", fontWeight: \"bold\", margin: 15 },\r\n              ]}\r\n            >\r\n              Go To The Cart\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n// add view and new styles to every element (Text)\r\n//  TODO View between Image and contain Text\r\n"]},"metadata":{},"sourceType":"module"}
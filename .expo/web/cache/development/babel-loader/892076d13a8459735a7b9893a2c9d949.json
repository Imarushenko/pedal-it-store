{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Navigations from \"./navigations/Navigations\";\nimport AppLoading from \"expo-app-loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Context = React.createContext();\nexport default function App() {\n  var _useFonts = useFonts({\n    \"Redressed-Regular\": require(\"./assets/Redressed-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else return _jsx(Navigations, {});\n}","map":{"version":3,"sources":["D:/React Native Final/pedal-it-store/App.js"],"names":["React","useState","Navigations","AppLoading","Context","createContext","App","useFonts","require","fontsLoaded"],"mappings":";AAgBA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAGA,OAAO,IAAMC,OAAO,GAAGJ,KAAK,CAACK,aAAN,EAAhB;AAEP,eAAe,SAASC,GAAT,GAAe;AAe5B,kBAAoBC,QAAQ,CAAC;AAC3B,yBAAqBC,OAAO;AADD,GAAD,CAA5B;AAAA;AAAA,MAAKC,WAAL;;AAIA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,KAAC,UAAD,KAAP;AACD,GAFD,MAGE,OAEI,KAAC,WAAD,KAFJ;AAKH","sourcesContent":["// import { useFonts, Audiowide_400Regular } from \"@expo-google-fonts/audiowide\";\n// import Navigations from \"./navigations/Navigations\";\n\n// export default () => {\n//   let [fontsLoaded] = useFonts({\n//     Audiowide_400Regular,\n//   });\n\n//   let fontSize = 24;\n//   let paddingVertical = 6;\n\n//     return (\n\n//     <Navigations></Navigations>)\n// };\n\nimport React, { useState } from \"react\";\nimport Navigations from \"./navigations/Navigations\";\nimport AppLoading from \"expo-app-loading\";\n// import { useFonts } from \"@expo-google-fonts/Redressed-Regular\";\n\nexport const Context = React.createContext();\n\nexport default function App() {\n  //   const [list, setList] = useState([])\n\n  //   function removeFromList(prod) {\n  //     setList(list.filter(item => item.index !== prod.index))\n  //   }\n\n  // function resetList() {\n  //   setList([])\n  // }\n\n  // function addToList(prod) {\n  //   setList([...list, prod])\n  // }\n\n  let [fontsLoaded] = useFonts({\n    \"Redressed-Regular\": require(\"./assets/Redressed-Regular.ttf\"),\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else\n    return (\n      // <Context.Provider value={{ list, addToList, removeFromList, resetList }}>\n        <Navigations></Navigations>\n   \n    );\n}\n"]},"metadata":{},"sourceType":"module"}
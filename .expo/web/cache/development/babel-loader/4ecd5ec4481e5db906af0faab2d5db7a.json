{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StoreNavigator from \"./navigation/StoreNavigation\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts } from '@expo-google-fonts/montserrat-alternates';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Context = React.createContext();\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  function removeFromList(prod) {\n    setList(list.filter(function (item) {\n      return item.index !== prod.index;\n    }));\n  }\n\n  function resetList() {\n    setList([]);\n  }\n\n  function addToList(prod) {\n    setList([].concat(_toConsumableArray(list), [prod]));\n  }\n\n  var _useFonts = useFonts({\n    \"textFont\": require(\"./assets/fonts/MontserratAlternates-Medium.ttf\"),\n    \"headerFont\": require(\"./assets/fonts/MontserratAlternates-ExtraBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else return _jsx(Context.Provider, {\n    value: {\n      list: list,\n      addToList: addToList,\n      removeFromList: removeFromList,\n      resetList: resetList\n    },\n    children: _jsx(StoreNavigator, {})\n  });\n}","map":{"version":3,"sources":["D:/React Native Final/pedal-it-store/navigations/Navigations.js"],"names":["React","useState","StoreNavigator","AppLoading","useFonts","Context","createContext","App","list","setList","removeFromList","prod","filter","item","index","resetList","addToList","require","fontsLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,0CAAzB;;AAEA,OAAO,IAAMC,OAAO,GAAGL,KAAK,CAACM,aAAN,EAAhB;AAEP,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BF,IAAAA,OAAO,CAACD,IAAI,CAACI,MAAL,CAAY,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,KAAL,KAAeH,IAAI,CAACG,KAAxB;AAAA,KAAhB,CAAD,CAAP;AACD;;AAED,WAASC,SAAT,GAAqB;AACnBN,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAED,WAASO,SAAT,CAAmBL,IAAnB,EAAyB;AACvBF,IAAAA,OAAO,8BAAKD,IAAL,IAAWG,IAAX,GAAP;AACD;;AAED,kBAAoBP,QAAQ,CAAC;AAC3B,gBAAYa,OAAO,kDADQ;AAE3B,kBAAcA,OAAO;AAFM,GAAD,CAA5B;AAAA;AAAA,MAAKC,WAAL;;AAKA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,KAAC,UAAD,KAAP;AACD,GAFD,MAGA,OACE,KAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEV,MAAAA,IAAI,EAAJA,IAAF;AAAQQ,MAAAA,SAAS,EAATA,SAAR;AAAmBN,MAAAA,cAAc,EAAdA,cAAnB;AAAmCK,MAAAA,SAAS,EAATA;AAAnC,KAAzB;AAAA,cACE,KAAC,cAAD;AADF,IADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\r\nimport StoreNavigator from './navigation/StoreNavigation';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts } from '@expo-google-fonts/montserrat-alternates';\r\n\r\nexport const Context = React.createContext()\r\n\r\nexport default function App() {\r\n  const [list, setList] = useState([])\r\n\r\n  function removeFromList(prod) {\r\n    setList(list.filter(item => item.index !== prod.index))\r\n  }\r\n\r\n  function resetList() {\r\n    setList([])\r\n  }\r\n\r\n  function addToList(prod) {\r\n    setList([...list, prod])\r\n  }\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    \"textFont\": require('./assets/fonts/MontserratAlternates-Medium.ttf'),\r\n    \"headerFont\": require('./assets/fonts/MontserratAlternates-ExtraBold.ttf')\r\n  })\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else\r\n  return (\r\n    <Context.Provider value={{ list, addToList, removeFromList, resetList }}>\r\n      <StoreNavigator />\r\n    </Context.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
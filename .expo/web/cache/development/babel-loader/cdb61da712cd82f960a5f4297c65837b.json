{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PRODUCTS } from \"../data/Dummy-Data\";\nimport styles from \"../assets/Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProductsScreen(_ref) {\n  var route = _ref.route;\n  var product_id = route.params.product_id;\n  var current_product = PRODUCTS.find(function (item) {\n    return item.id === product_id;\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      children: _jsx(Image, {\n        source: {\n          uri: current_product.productImage\n        },\n        style: styles.image,\n        children: _jsx(View, {\n          style: _objectSpread({}, sty)\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["D:/React Native Final/pedal-it-store/screens/ProductsScreen.js"],"names":["React","PRODUCTS","styles","ProductsScreen","route","product_id","params","current_product","find","item","id","container","uri","productImage","image","sty"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT;AACA,OAAOC,MAAP;;AAEA,eAAe,SAASC,cAAT,OAAmC;AAAA,MAATC,KAAS,QAATA,KAAS;AAChD,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaD,UAAhC;AACA,MAAME,eAAe,GAAGN,QAAQ,CAACO,IAAT,CAAc,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,EAAL,KAAYL,UAAtB;AAAA,GAAd,CAAxB;AAEA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACS,SAApB;AAAA,cACI,KAAC,UAAD;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAEL,eAAe,CAACM;AAAtB,SAAf;AAAoD,QAAA,KAAK,EAAEX,MAAM,CAACY,KAAlE;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,oBAAMC,GAAN;AAAX;AADF;AADJ;AADJ,IADJ;AASD","sourcesContent":["import React from \"react\";\r\nimport { ScrollView, View } from \"react-native-web\";\r\nimport { PRODUCTS } from \"../data/Dummy-Data\";\r\nimport styles from \"../assets/Styles\";\r\n\r\nexport default function ProductsScreen({ route }) {\r\n  const product_id = route.params.product_id;\r\n  const current_product = PRODUCTS.find((item) => item.id === product_id);\r\n\r\n  return (\r\n      <View style={styles.container}>\r\n          <ScrollView>\r\n              <Image source={{uri: current_product.productImage}} style={styles.image}>\r\n                <View style={{...sty}}></View>\r\n              </Image>\r\n          </ScrollView>\r\n      </View>\r\n  )\r\n}\r\n\r\n\r\n// Product Details"]},"metadata":{},"sourceType":"module"}
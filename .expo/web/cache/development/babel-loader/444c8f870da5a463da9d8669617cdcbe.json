{"ast":null,"code":"import React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { PRODUCTS, CART } from \"../data/Dummy-Data\";\nimport styles from \"../assets/Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CartScreen(_ref) {\n  var navigation = _ref.navigation;\n  var productsInCart;\n\n  for (var i = 0; i < CART.length; i++) {\n    productsInCart[i] = productsInCart;\n  }\n\n  return _jsxs(View, {\n    style: styles.gridItem,\n    children: [_jsx(Text, {\n      style: [styles.title, {\n        fontSize: 50\n      }],\n      children: \"Cart\"\n    }), _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.product.id;\n      },\n      data: CART,\n      renderItem: renderGridItem\n    }), _jsxs(View, {\n      children: [_jsxs(View, {\n        style: [styles.inputView],\n        children: [_jsx(Text, {\n          style: styles.textInput,\n          children: \"Coupon: \"\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(text) {\n            return setCouponInput(text);\n          },\n          style: [styles.input, isCouponValid ? \"\" : styles.inputError]\n        }), _jsx(Text, {\n          style: [styles.errorMsg, {\n            marginBottom: 10\n          }],\n          children: isCouponValid ? \"\" : \"There is no such coupon...\"\n        }), _jsx(View, {\n          style: {\n            alignItems: \"center\",\n            textAlign: \"center\"\n          },\n          children: _jsx(TouchableOpacity, {\n            style: styles.enterCouponButton,\n            onPress: function onPress() {\n              if (discountPercentages === 0) enterCoupon();else {\n                alert(\"You have already entered a coupon\");\n              }\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"ENTER COUPON\"\n            })\n          })\n        })]\n      }), _jsxs(Text, {\n        style: styles.titles,\n        children: [\"Cart subtotal: \", price, \"$\"]\n      }), _jsxs(Text, {\n        style: [styles.titles, discountPercentages === 0 ? {\n          display: \"none\"\n        } : \"\"],\n        children: [\"Cart total after discount: \", priceAfterDiscount, \"$\"]\n      }), _jsx(TouchableOpacity, {\n        style: styles.navigateButton,\n        onPress: function onPress() {\n          return navigation.navigate(\"Payment\", {\n            finalPrice: priceAfterDiscount\n          });\n        },\n        children: _jsx(Text, {\n          style: [styles.buttonText],\n          children: \"Go to Payment...\"\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["C:/pedal-it-store/screens/CartScreen.js"],"names":["React","useState","PRODUCTS","CART","styles","CartScreen","navigation","productsInCart","i","length","gridItem","title","fontSize","item","product","id","renderGridItem","inputView","textInput","text","setCouponInput","input","isCouponValid","inputError","errorMsg","marginBottom","alignItems","textAlign","enterCouponButton","discountPercentages","enterCoupon","alert","buttonText","titles","price","display","priceAfterDiscount","navigateButton","navigate","finalPrice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Button,\r\n  TextInput,\r\n  FlatList,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport { PRODUCTS, CART } from \"../data/Dummy-Data\";\r\nimport styles from \"../assets/Styles\";\r\n\r\nexport default function CartScreen({ navigation }) {\r\n\r\n  // return (\r\n  //   <View style={styles.centerView}>\r\n  //     <Text style={styles.productTitle}>TEST</Text>\r\n  //     <Button\r\n  //       onPress={() => {\r\n  //         console.log(\"Button Pressed\");\r\n  //         console.log(\"Cart: \");\r\n  //         console.log(CART);\r\n  //       }}\r\n  //     >\r\n  //       Button Test\r\n  //     </Button>\r\n  //   </View>\r\n  // );\r\nlet productsInCart;\r\nfor(let i = 0; i < CART.length; i++) {\r\n  productsInCart[i] = productsInCart;\r\n}\r\n  \r\n  return (\r\n    <View style={styles.gridItem}>\r\n      <Text style={[styles.title, { fontSize: 50 }]}>Cart</Text>\r\n      <FlatList\r\n        keyExtractor={(item) => item.product.id}\r\n        data={CART}\r\n        renderItem={renderGridItem}\r\n      />\r\n\r\n      <View>\r\n        <View style={[styles.inputView]}>\r\n          <Text style={styles.textInput}>Coupon: </Text>\r\n          <TextInput\r\n            onChangeText={(text) => setCouponInput(text)}\r\n            style={[styles.input, isCouponValid ? \"\" : styles.inputError]}\r\n          />\r\n          <Text style={[styles.errorMsg, { marginBottom: 10 }]}>\r\n            {isCouponValid ? \"\" : \"There is no such coupon...\"}\r\n          </Text>\r\n\r\n          <View style={{ alignItems: \"center\", textAlign: \"center\" }}>\r\n            <TouchableOpacity\r\n              style={styles.enterCouponButton}\r\n              onPress={() => {\r\n                if (discountPercentages === 0) enterCoupon();\r\n                else {\r\n                  alert(\"You have already entered a coupon\");\r\n                }\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>ENTER COUPON</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <Text style={styles.titles}>Cart subtotal: {price}$</Text>\r\n        <Text\r\n          style={[\r\n            styles.titles,\r\n            discountPercentages === 0 ? { display: \"none\" } : \"\",\r\n          ]}\r\n        >\r\n          Cart total after discount: {priceAfterDiscount}$\r\n        </Text>\r\n\r\n        <TouchableOpacity\r\n          style={styles.navigateButton}\r\n          onPress={() =>\r\n            navigation.navigate(\"Payment\", {\r\n              finalPrice: priceAfterDiscount,\r\n            })\r\n          }\r\n        >\r\n          <Text style={[styles.buttonText]}>Go to Payment...</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { CartContext } from \"../CartContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function CartScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(CartContext),\n      items = _useContext.items,\n      getItemsCount = _useContext.getItemsCount,\n      getTotalPrice = _useContext.getTotalPrice;\n\n  function Totals() {\n    var _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        total = _useState2[0],\n        setTotal = _useState2[1];\n\n    useEffect(function () {\n      setTotal(getTotalPrice());\n    });\n    return _jsxs(View, {\n      style: styles.cartLineTotal,\n      children: [_jsx(Text, {\n        style: [styles.lineLeft, styles.lineTotal],\n        children: \"Total\"\n      }), _jsxs(Text, {\n        style: styles.lineRight,\n        children: [\"$ \", total]\n      })]\n    });\n  }\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.cartLine,\n      children: [_jsxs(Text, {\n        style: styles.lineLeft,\n        children: [item.product.name, \" x \", item.qty]\n      }), _jsxs(Text, {\n        style: styles.lineRight,\n        children: [\"$ \", item.totalPrice]\n      })]\n    });\n  }\n\n  return _jsx(FlatList, {\n    style: styles.itemsList,\n    contentContainerStyle: styles.itemsListContainer,\n    data: items,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.product.id.toString();\n    },\n    ListFooterComponent: Totals\n  });\n}\nvar styles = StyleSheet.create({\n  cartLine: {\n    flexDirection: 'row'\n  },\n  cartLineTotal: {\n    flexDirection: 'row',\n    borderTopColor: '#dddddd',\n    borderTopWidth: 1\n  },\n  lineTotal: {\n    fontWeight: 'bold'\n  },\n  lineLeft: {\n    fontSize: 20,\n    lineHeight: 40,\n    color: '#333333'\n  },\n  lineRight: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: 'bold',\n    lineHeight: 40,\n    color: '#333333',\n    textAlign: 'right'\n  },\n  itemsList: {\n    backgroundColor: '#eeeeee'\n  },\n  itemsListContainer: {\n    backgroundColor: '#eeeeee',\n    paddingVertical: 8,\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"sources":["C:/pedal-it-store/screens/CartScreen.js"],"names":["React","useEffect","useState","useContext","CartContext","CartScreen","navigation","items","getItemsCount","getTotalPrice","Totals","total","setTotal","styles","cartLineTotal","lineLeft","lineTotal","lineRight","renderItem","item","cartLine","product","name","qty","totalPrice","itemsList","itemsListContainer","id","toString","StyleSheet","create","flexDirection","borderTopColor","borderTopWidth","fontWeight","fontSize","lineHeight","color","flex","textAlign","backgroundColor","paddingVertical","marginHorizontal"],"mappings":";AA2FA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;AAGA,SAASC,WAAT;;;AAEA,OAAO,SAASC,UAAT,OAAmC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAExC,oBAA8CH,UAAU,CAACC,WAAD,CAAxD;AAAA,MAAOG,KAAP,eAAOA,KAAP;AAAA,MAAcC,aAAd,eAAcA,aAAd;AAAA,MAA6BC,aAA7B,eAA6BA,aAA7B;;AAEA,WAASC,MAAT,GAAkB;AAChB,oBAAwBR,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,QAAKS,KAAL;AAAA,QAAYC,QAAZ;;AACAX,IAAAA,SAAS,CAAC,YAAM;AACdW,MAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACD,KAFQ,CAAT;AAGA,WACG,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACC,aAApB;AAAA,iBACG,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACD,MAAM,CAACE,QAAR,EAAkBF,MAAM,CAACG,SAAzB,CAAb;AAAA;AAAA,QADH,EAEG,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA,yBAAkCN,KAAlC;AAAA,QAFH;AAAA,MADH;AAMD;;AAED,WAASO,UAAT,QAA4B;AAAA,QAAPC,IAAO,SAAPA,IAAO;AAC1B,WACG,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA,iBACG,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACE,QAApB;AAAA,mBAA+BI,IAAI,CAACE,OAAL,CAAaC,IAA5C,SAAqDH,IAAI,CAACI,GAA1D;AAAA,QADH,EAEG,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACI,SAApB;AAAA,yBAAkCE,IAAI,CAACK,UAAvC;AAAA,QAFH;AAAA,MADH;AAMD;;AAED,SACE,KAAC,QAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACY,SADhB;AAEE,IAAA,qBAAqB,EAAEZ,MAAM,CAACa,kBAFhC;AAGE,IAAA,IAAI,EAAEnB,KAHR;AAIE,IAAA,UAAU,EAAEW,UAJd;AAKE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACE,OAAL,CAAaM,EAAb,CAAgBC,QAAhB,EAAV;AAAA,KALhB;AAME,IAAA,mBAAmB,EAAElB;AANvB,IADF;AAUD;AAED,IAAMG,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,QAAQ,EAAE;AACRW,IAAAA,aAAa,EAAE;AADP,GADqB;AAI/BjB,EAAAA,aAAa,EAAE;AACbiB,IAAAA,aAAa,EAAE,KADF;AAEbC,IAAAA,cAAc,EAAE,SAFH;AAGbC,IAAAA,cAAc,EAAE;AAHH,GAJgB;AAS/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,UAAU,EAAE;AADH,GAToB;AAY/BnB,EAAAA,QAAQ,EAAE;AACRoB,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,UAAU,EAAE,EAFJ;AAGRC,IAAAA,KAAK,EAAC;AAHE,GAZqB;AAiB/BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,IAAI,EAAE,CADG;AAETH,IAAAA,QAAQ,EAAE,EAFD;AAGTD,IAAAA,UAAU,EAAE,MAHH;AAITE,IAAAA,UAAU,EAAE,EAJH;AAKTC,IAAAA,KAAK,EAAC,SALG;AAMTE,IAAAA,SAAS,EAAC;AAND,GAjBoB;AAyB/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,eAAe,EAAE;AADR,GAzBoB;AA4B/Bd,EAAAA,kBAAkB,EAAE;AAClBc,IAAAA,eAAe,EAAE,SADC;AAElBC,IAAAA,eAAe,EAAE,CAFC;AAGlBC,IAAAA,gBAAgB,EAAE;AAHA;AA5BW,CAAlB,CAAf","sourcesContent":["// import React, { useState } from \"react\";\r\n// import {\r\n//   Text,\r\n//   View,\r\n//   Button,\r\n//   TextInput,\r\n//   FlatList,\r\n//   ImageBackground,\r\n//   TouchableOpacity,\r\n//   SafeAreaView,\r\n// } from \"react-native\";\r\n\r\n// import { PRODUCTS, CART } from \"../data/Dummy-Data\";\r\n// import styles from \"../assets/Styles\";\r\n// import { render } from \"react-dom\";\r\n// import CartComponent from \"../components/CartComponent\";\r\n\r\n// export default function CartScreen({ navigation }) {\r\n//   let proc = \"\", res=\"\";\r\n//   for(let i = 0; i < CART.length; i++) {\r\n//     proc = CART[i].product_title;\r\n//     res = res + proc;\r\n//   }\r\n\r\n\r\n//   return(\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.productTitle}>\r\n//         {\"Name: \" + res}{\"\\n\"}\r\n//       </Text>\r\n//       </View>\r\n\r\n      \r\n\r\n      \r\n//   )\r\n//   // const renderGridItem = ({ item }) => {\r\n//   //   return (\r\n//   //   <CartComponent\r\n//   //   Image={item.PRODUCTS.productImage}\r\n//   //   product_name={item.PRODUCTS.product_title}\r\n//   //   >\r\n    \r\n//   //   </CartComponent>)\r\n//   // };\r\n\r\n//   // return(\r\n//   //   <View style={styles.container}>\r\n//   //     <FlatList\r\n//   //       keyExtractor={item => item.PRODUCTS.id}\r\n//   //       data={CART}\r\n//   //       renderItem={renderGridItem}\r\n//   //     >\r\n\r\n//   //     </FlatList>\r\n//   //   </View>\r\n//   // )\r\n// }\r\n\r\n// // let productName;\r\n// // for(let i = 0; i < CART.length; i++) {\r\n// //   productName = CART[i].productTitle;\r\n// // }\r\n\r\n// // return (\r\n// //   // <View style={styles.centerView}>\r\n// //   //   {/* <Text style={styles.productTitle}>{productName}</Text> */}\r\n\r\n// //   //   <Button\r\n// //   //     onPress={() => {\r\n// //   //       console.log(\"Button Pressed\");\r\n// //   //       // console.log(\"Cart: \");\r\n// //   //       // console.log(CART);\r\n// //   //       <View style={styles.container}><Text style={styles.productTitle}>{productName}</Text></View>\r\n// //   //     }}\r\n// //   //   >\r\n// //   //     <Text style={{color: \"balck\"}}>Button Test</Text>\r\n// //   //   </Button>\r\n// //   // </View>\r\n\r\n// // );\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { View, Text, Button, FlatList, StyleSheet } from 'react-native';\r\n\r\nimport { CartContext } from '../CartContext';\r\n\r\nexport function CartScreen ({navigation}) {\r\n\r\n  const {items, getItemsCount, getTotalPrice} = useContext(CartContext);\r\n  \r\n  function Totals() {\r\n    let [total, setTotal] = useState(0);\r\n    useEffect(() => {\r\n      setTotal(getTotalPrice());\r\n    });\r\n    return (\r\n       <View style={styles.cartLineTotal}>\r\n          <Text style={[styles.lineLeft, styles.lineTotal]}>Total</Text>\r\n          <Text style={styles.lineRight}>$ {total}</Text>\r\n       </View>\r\n    );\r\n  }\r\n\r\n  function renderItem({item}) {\r\n    return (\r\n       <View style={styles.cartLine}>\r\n          <Text style={styles.lineLeft}>{item.product.name} x {item.qty}</Text>\r\n          <Text style={styles.lineRight}>$ {item.totalPrice}</Text>\r\n       </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <FlatList\r\n      style={styles.itemsList}\r\n      contentContainerStyle={styles.itemsListContainer}\r\n      data={items}\r\n      renderItem={renderItem}\r\n      keyExtractor={(item) => item.product.id.toString()}\r\n      ListFooterComponent={Totals}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cartLine: { \r\n    flexDirection: 'row',\r\n  },\r\n  cartLineTotal: { \r\n    flexDirection: 'row',\r\n    borderTopColor: '#dddddd',\r\n    borderTopWidth: 1\r\n  },\r\n  lineTotal: {\r\n    fontWeight: 'bold',    \r\n  },\r\n  lineLeft: {\r\n    fontSize: 20, \r\n    lineHeight: 40, \r\n    color:'#333333' \r\n  },\r\n  lineRight: { \r\n    flex: 1,\r\n    fontSize: 20, \r\n    fontWeight: 'bold',\r\n    lineHeight: 40, \r\n    color:'#333333', \r\n    textAlign:'right',\r\n  },\r\n  itemsList: {\r\n    backgroundColor: '#eeeeee',\r\n  },\r\n  itemsListContainer: {\r\n    backgroundColor: '#eeeeee',\r\n    paddingVertical: 8,\r\n    marginHorizontal: 8,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}